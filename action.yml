name: Setup cross-compiler (build on the fly)
description: Builds a (mostly) static gfortran / GCC tool-chain for macOS runners.

inputs:
  gcc:
    description: GCC version (major.minor.patch)
    default: "14.2.0"
  target_arch:
    description: Target architecture to emit code for (arm64 | x86_64)
    required: true

runs:
  using: composite
  steps:
    # 1️⃣  Checkout the action’s own source (so scripts are available)
    - uses: actions/checkout@v4
      with:
        path: cross-src

    # 2️⃣  Lightweight conda front-end
    - uses: mamba-org/setup-micromamba@v1
      with:
        init-shell: bash
        cache-downloads: true
        cache-env: true

    # 3️⃣  Build the tool-chain (drops a tarball in $PWD)
    - name: Build static cross-compiler
      shell: bash
      run: |
        BUILD_ARCH=$(uname -m)
        bash cross-src/scripts/build_gfortran.sh \
             "${{ inputs.gcc }}" \
             "${{ inputs.target_arch }}" \
             "$BUILD_ARCH"

    # 4️⃣  Unpack it into ./bin and expose compilers
    - name: Install & expose cross-compiler
      shell: bash
      run: |
        # Where we want the final tree to live
        TOOLCHAIN_DIR="$PWD/bin"
        mkdir -p "$TOOLCHAIN_DIR"

        # Locate the tarball produced in the previous step
        TARBALL=$(echo gfortran-darwin-*.tar.gz)

        # Unpack, dropping the single leading directory component
        tar -xzf "$TARBALL" -C "$TOOLCHAIN_DIR" --strip-components=1

        # f951 expects libs in <prefix>/bin/lib — add that shim
        ln -sf ../lib "$TOOLCHAIN_DIR/bin/lib"        
        
        # Convenience symlinks at the tool-chain root
        ln -sf "$TOOLCHAIN_DIR/bin/gfortran" "$TOOLCHAIN_DIR/cross-gfortran"
        ln -sf "$TOOLCHAIN_DIR/bin/gcc"      "$TOOLCHAIN_DIR/cross-gcc"
        ln -sf "$TOOLCHAIN_DIR/bin/g++"      "$TOOLCHAIN_DIR/cross-g++"

        # Make everything discoverable for the rest of the workflow
        {
          echo "PATH=$TOOLCHAIN_DIR:$TOOLCHAIN_DIR/bin:$PATH"
          echo "FC=$TOOLCHAIN_DIR/cross-gfortran"
          echo "CC=$TOOLCHAIN_DIR/cross-gcc"
          echo "CXX=$TOOLCHAIN_DIR/cross-g++"
          echo "CROSS_GFORTRAN=$TOOLCHAIN_DIR/cross-gfortran"
          echo "CROSS_GCC=$TOOLCHAIN_DIR/cross-gcc"
          echo "CROSS_GPP=$TOOLCHAIN_DIR/cross-g++"
        } >> "$GITHUB_ENV"
