name: build-gfortran-darwin
    
on:
  workflow_dispatch:
  push:
    tags: [ 'gcc-*' ]

jobs:
  build:
# strategy:
#   matrix:
#     build_arch:  [x86_64, arm64]
#     target_arch: [x86_64, arm64]
#     gcc:         [14.2.0]
    strategy:
      matrix:
        build_arch:  [arm64]
        target_arch: [x86_64]
        gcc:         [14.2.0]

    runs-on: ${{ matrix.build_arch == 'arm64' && 'macos-14' || 'macos-13' }}  

    steps:
    - uses: actions/checkout@v4

    - name: Install micromamba
      uses: mamba-org/setup-micromamba@v1
      with:
        init-shell: bash
        cache-downloads: true
        cache-env: true

    - name: Setup micromamba environment
      run: |
        bash scripts/setup_mamba_env.sh        
        
    - name: Download static prerequisites from GitHub Release
      run: |
        mkdir -p downloads
        base_url="https://github.com/perazz/gfortran-cross-compiler/releases/download/static-prereqs-v1"

        curl -Lso downloads/gmp-6.3.0.gz       "$base_url/gmp-6.3.0.gz"
        curl -Lso downloads/mpfr-4.2.1.gz      "$base_url/mpfr-4.2.1.gz"
        curl -Lso downloads/mpc-1.3.1.gz       "$base_url/mpc-1.3.1.gz"
        curl -Lso downloads/isl-0.26.gz        "$base_url/isl-0.26.gz"
        curl -Lso downloads/zlib-1.3.1.gz      "$base_url/zlib-1.3.1.gz"
        
    # (2) Setup mamba environment and install static libraries
    - name: Install static prerequisites
      run: bash scripts/build_deps_static.sh

    - name: Verify static prerequisites
      run: bash scripts/check_static_deps.sh      
      
    - name: Build compiler        
      run: |
        mkdir -p gcc-build
        cd gcc-build
        {
          bash ../scripts/build_gfortran_static.sh \
            "${{ matrix.gcc }}" \
            "${{ matrix.target_arch }}" \
            "${{ matrix.build_arch }}"
        } 2>&1 | tee ../configure-output.log

        test ${PIPESTATUS[0]} -eq 0    
        
    - name: Show gcc-config.log
      if: failure()                 # run only when a previous step fails
      run: |
        echo '──── gcc-build/config.log ────'
        cat gcc-build/config.log || true     
        echo '─── configure-output.log ───'
        cat configure-output.log || true        

    # (2 a) test the compiler ─────────────────────────────────────────────
    - name: Test built gfortran
      run: |
        bash scripts/test_gfortran.sh \
          "${{ matrix.build_arch }}" \
          "${{ matrix.target_arch }}" \
          "static-root"
                
    # (2 b) compute a checksum that travels with the tarball ──────────────
    - name: Compute SHA-256
      run: |
        TARBALL=$(ls gfortran-darwin-${{ matrix.target_arch }}-*.tar.gz)
        shasum -a 256 "$TARBALL" > \
          "gfortran-${{ matrix.target_arch }}-${{ matrix.build_arch }}-${{ matrix.gcc }}.sha256"
          
    # (3) upload whatever tarballs were produced in this job ────────────────
    - name: Upload gfortran tarball
      uses: actions/upload-artifact@v4
      with:
        name: gfortran-tarball-${{ matrix.target_arch }}-${{ matrix.build_arch }}-${{ matrix.gcc }}
        path: gfortran-darwin-${{ matrix.target_arch }}-${{ matrix.build_arch }}.static.tar.gz

    - name: Upload gfortran SHA256 checksum
      uses: actions/upload-artifact@v4
      with:
        name: gfortran-sha256-${{ matrix.target_arch }}-${{ matrix.build_arch }}-${{ matrix.gcc }}
        path: gfortran-${{ matrix.target_arch }}-${{ matrix.build_arch }}-${{ matrix.gcc }}.sha256



        
